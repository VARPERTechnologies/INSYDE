#include "restrictedpointf.h"

RestrictedPointF::RestrictedPointF() :
	QPointF()
{
	pointConstrain = None;
	lastX = lastY = 0;
}

RestrictedPointF::RestrictedPointF(qreal xpos, qreal ypos, RestrictedPointF::PointConstrain pc) : 
	QPointF(xpos, ypos)
{
	pointConstrain = pc;
	
	lastX = xpos;
	lastY = ypos;
}


RestrictedPointF::~RestrictedPointF()
{
	
}

void RestrictedPointF::setConstrain(RestrictedPointF::PointConstrain pc)
{
	pointConstrain = pc;
}

RestrictedPointF::PointConstrain RestrictedPointF::getConstrain() const
{
	return pointConstrain;
}

void RestrictedPointF::setX(qreal x)
{
	switch(pointConstrain){
		case RestrictedPointF::Horizontal:
		case RestrictedPointF::None:
			QPoint::setX(x);
			break;
		case RestrictedPointF::Vertical:
		case RestrictedPointF::Both:
		default:
			break;
			
	}
}

void RestrictedPointF::setY(qreal y)
{
	switch(pointConstrain){
		case RestrictedPointF::Vertical:
		case RestrictedPointF::None:
			QPointF::setY(y);
			break;
		case RestrictedPointF::Horizontal:
		case RestrictedPointF::Both:
		default:
			break;
			
	}
}

